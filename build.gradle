plugins {
    id 'java'
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation(platform('org.junit:junit-bom:5.8.1'))
    testImplementation('org.junit.jupiter:junit-jupiter')
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

// Registers the "dayN" task, requires the day and classpath to be passed
def generateTask(day, path) {
    tasks.register("day$day", JavaExec) {
        dependsOn('classes')
        classpath = sourceSets.main.runtimeClasspath
        main = path
    }
}

def sourceSet = project.sourceSets.findByName('main').java
def fileSeparator = java.nio.file.FileSystems.getDefault().getSeparator();

// Search through all java files in the sourceSets, that start with Day
// in a directory that ends with two digits, which represent the day.
// If the directory is 'day01', then the task will be called 'day1'
// For 'day11', it will be called 'day11'
sourceSet.filter{ it.path.endsWith('.java') }.each {
    def fileName = it.getName()
    def className = fileName.substring(0, fileName.length() - 5)

    if (className.startsWith('Day')) {
        def classPath = it.getParentFile().path
            .substring(sourceSet.srcDirs[0].path.length()+1)
            .replace(fileSeparator, '.')

        def dayNumber = classPath.substring(classPath.length()-2)
        generateTask(dayNumber, "$classPath.$className")
    }
}

task initSource(type : Copy) {
    onlyIf {
        project.hasProperty('d')
    }
    doFirst {
        println "initSource ${project.findProperty('d')}"
    }
    
    from 'templates'
    include 'Day.template'
    into "src/main/java/net/ddns/spellbank/day${project.findProperty('d')}"
    rename(fileName -> "Day${project.findProperty('d')}.java")
    expand([day: project.findProperty('d')])
}

task initTest(type : Copy) {
    onlyIf {
        project.hasProperty('d')
    }
    doFirst {
        println "initTest ${project.findProperty('d')}"
    }
    from 'templates'
    include 'DayTest.template'
    into "src/test/java/net/ddns/spellbank/day${project.findProperty('d')}"
    rename(fileName -> "TestDay${project.findProperty('d')}.java")
    expand([day: project.findProperty('d')])
}

task initSourceInput(type : Copy) {
    onlyIf {
        project.hasProperty('d')
    }
    
    from 'templates'
    include 'input1'
    into "src/main/resources/day${project.findProperty('d')}"
}

task initTestInput(type : Copy) {
    onlyIf {
        project.hasProperty('d')
    }
    
    from 'templates'
    include 'input1'
    into "src/test/resources/day${project.findProperty('d')}"
}

task initDay {
    dependsOn 'initSource'
    dependsOn 'initTest'
    dependsOn 'initSourceInput'
    dependsOn 'initTestInput'
}